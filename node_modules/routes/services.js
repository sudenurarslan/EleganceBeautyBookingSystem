const express = require('express');
const db = require('../config/database');
const { authenticateToken, authorizeAdmin } = require('../middleware/auth');

const router = express.Router();

// Tüm hizmetleri getir
router.get('/', async (req, res) => {
  try {
    const { category } = req.query;
    
    let query = 'SELECT * FROM services WHERE is_active = TRUE';
    const params = [];
    
    if (category) {
      query += ' AND category = ?';
      params.push(category);
    }
    
    query += ' ORDER BY category, name';
    
    const [services] = await db.execute(query, params);
    
    res.json(services);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Hizmetler alınırken bir hata oluştu' });
  }
});

// Hizmet kategorilerini getir
router.get('/categories', async (req, res) => {
  try {
    const [categories] = await db.execute(
      'SELECT DISTINCT category FROM services WHERE is_active = TRUE ORDER BY category'
    );
    
    res.json(categories.map(c => c.category));
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Kategoriler alınırken bir hata oluştu' });
  }
});

// Belirli bir hizmeti veren uzmanları getir
router.get('/:id/specialists', async (req, res) => {
  try {
    const service_id = req.params.id;
    
    const [specialists] = await db.execute(`
      SELECT 
        s.*,
        sr.average_rating,
        sr.total_reviews
      FROM specialists s
      JOIN specialist_services ss ON s.id = ss.specialist_id
      LEFT JOIN specialist_ratings sr ON s.id = sr.id
      WHERE ss.service_id = ? AND s.status = 'active'
      ORDER BY sr.average_rating DESC
    `, [service_id]);
    
    res.json(specialists);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Uzmanlar alınırken bir hata oluştu' });
  }
});

module.exports = router;